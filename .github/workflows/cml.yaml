name: run-feature-selection
on:
  pull_request:
    types: [opened]
  issue_comment:
    types: [created]
jobs:
  deploy-runner:
     runs-on: [ubuntu-latest]
     steps:
        - uses: khan/pull-request-comment-trigger@master
          id: check
          with:
            trigger: '#deploy-cml'
            reaction: rocket
          env:
            GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        - uses: actions/checkout@v2
        - uses: iterative/setup-cml@v1
        - name: deploy
          shell: bash
          env:
            REPO_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          run: |
            cml-runner \
            --cloud aws \
            --cloud-region=us-east-2 \
            --cloud-type=g4dn.xlarge \
            --labels=cml-runner

  run:
    needs: deploy-runner
    runs-on: [self-hosted,cml-runner]
    timeout-minutes: 600
    container:
      image: alokmlp/cml_gpu_with_requirements:0-dvc2-base1-gpu-rapids
      # image: docker://iterativeai/cml:0-dvc2-base1-gpu
      options: --gpus all
    steps:
    - uses: actions/checkout@v2
    # - uses: actions/setup-python@v2
    #   with:
    #     python-version: '3.8'
    # - uses: conda-incubator/setup-miniconda@v2
    #   with:
    #     activate-environment: rapids
    # - name: Setup rapids api
    #   run: |
    #     conda install -c rapidsai -c nvidia -c conda-forge \
    #     rapids-blazing=21.10 python=3.8 cudatoolkit=11.0
    - name: Reproduce Pipeline
      env:
        repo_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TB_CREDENTIALS: ${{ secrets.TB_CREDENTIALS }}
        CONDA_PREFIX: /root/miniconda3/
      run: |
        export PATH="/root/miniconda3/bin/:$PATH"
        eval "$(conda shell.bash hook)"
        conda activate rapids-21.10
        git config --global user.email "${{ secrets.GH_EMAIL }}"
        git config --global user.name "${{ secrets.GH_NAME }}"
        dvc pull --run-cache || true
        dvc repro -R ContinuousML/
        dvc push
        git pull
        git checkout -b latest_run
        git add **/*.lock
        git commit -m "Github Actions Add Lock Files"
        git push
